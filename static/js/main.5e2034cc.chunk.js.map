{"version":3,"sources":["components/Header.jsx","components/Face.jsx","components/About.jsx","components/Works.jsx","components/Footer.jsx","components/Contact.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","className","href","Face","src","alt","height","width","About","id","Works","Footer","Contact","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wLAaeA,G,YAXA,WACX,OACI,yBAAKC,UAAU,UACX,yBAAKA,UAAU,gBAAe,uBAAGC,KAAM,aAAT,+CAC9B,yBAAKD,UAAU,gBAAe,uBAAGC,KAAM,aAAT,0CAC9B,yBAAKD,UAAU,gBAAe,uBAAGC,KAAM,aAAT,4DAC9B,yBAAKD,UAAU,gBAAe,uBAAGC,KAAM,aAAT,kDCK3BC,EAXF,WACT,OACI,yBAAKF,UAAU,QACX,qEACA,yLACA,yKACA,yBAAKA,UAAU,YAAYG,IAAK,sBAAuBC,IAAI,aAAaC,OAAO,KAAKC,MAAM,S,gBCyBvFC,EA9BD,WACV,OACI,kBAAC,IAAD,CAAkBC,GAAI,YAClB,yBAAKR,UAAU,SACX,gHACA,wpEAQA,8+CAKA,2iFC4BDS,EA9CD,WACV,MAAO,CACH,kBAAC,IAAD,CAAkBD,GAAI,YAClB,yBAAKR,UAAU,SAAQ,uFACnB,yBAAKA,UAAU,oBACX,uBAAGC,KAAK,qDAAqDD,UAAU,QACnE,yBAAKG,IAAK,iBAAkBC,IAAI,cAChC,yBAAKD,IAAK,kBAAmBC,IAAI,eACjC,yBAAKJ,UAAU,iBACX,4BAAI,gDACJ,0PAGR,uBAAGC,KAAK,4CAA4CD,UAAU,QAC1D,yBAAKG,IAAK,sBAAuBC,IAAI,iBACrC,yBAAKD,IAAK,uBAAwBC,IAAI,kBACtC,yBAAKJ,UAAU,iBACX,4BAAI,0CACJ,+GACA,qGAGR,uBAAGC,KAAK,gDAAgDD,UAAU,QAC9D,yBAAKG,IAAK,eAAgBC,IAAI,UAAUE,MAAM,UAC9C,yBAAKH,IAAK,gBAAiBC,IAAI,WAAWE,MAAM,UAChD,yBAAKN,UAAU,iBACX,4BAAI,uCACJ,8HACA,kHAGR,uBAAGC,KAAK,6CAA6CD,UAAU,QAC3D,yBAAKG,IAAK,iBAAkBC,IAAI,cAAcE,MAAM,UACpD,yBAAKH,IAAK,kBAAmBC,IAAI,eAAeE,MAAM,UACtD,yBAAKN,UAAU,iBACX,4BAAI,qCACJ,mIACA,uKC9BbU,EARA,WACX,OACI,yBAAKV,UAAU,UACX,kDCUGW,EAZC,WACZ,OACI,kBAAC,IAAD,CAAkBH,GAAI,YAClB,yBAAKR,UAAU,WACX,gJACA,sKACA,kECqBDY,MAbf,WACI,OACI,yBAAKZ,UAAU,OACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCbQa,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.5e2034cc.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"Header\">\r\n            <div className=\"HeaderButton\"><a href={\"#section1\"}>Главная</a></div>\r\n            <div className=\"HeaderButton\"><a href={\"#section2\"}>Обо мне</a></div>\r\n            <div className=\"HeaderButton\"><a href={\"#section3\"}>Мои работы</a></div>\r\n            <div className=\"HeaderButton\"><a href={\"#section4\"}>Контакт</a></div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Face = () => {\r\n    return (\r\n        <div className=\"Face\">\r\n            <h1>Привет!</h1>\r\n            <h1>Меня зовут Александр Тимощук</h1>\r\n            <h2>Начинающий Front End разработчик</h2>\r\n            <img className=\"reactIcon\" src={\"pics/react-icon.png\"} alt=\"react-icon\" height=\"64\" width=\"64\"/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Face;\r\n","import React from \"react\";\r\nimport ScrollableAnchor from 'react-scrollable-anchor';\r\n\r\nconst About = () => {\r\n    return (\r\n        <ScrollableAnchor id={'section2'}>\r\n            <div className=\"About\">\r\n                <h1>Коротко обо мне</h1>\r\n                <p>\r\n                    Базовые сценарии поведения пользователей формируют глобальную экономическую сеть и\r\n                    при этом - обнародованы.\r\n                    Вот вам яркий пример современных тенденций - высокое качество позиционных исследований предоставляет\r\n                    широкие возможности для существующих финансовых и административных условий.\r\n                    Господа, реализация намеченных плановых заданий способствует подготовке и реализации приоритизации\r\n                    разума над эмоциями.\r\n                </p>\r\n                <p>\r\n                    Разнообразный и богатый опыт говорит нам, что экономическая повестка сегодняшнего дня обеспечивает\r\n                    актуальность вывода текущих активов. Каждый из нас понимает очевидную вещь: сплочённость команды\r\n                    профессионалов требует от нас анализа переосмысления внешнеэкономических политик.\r\n                </p>\r\n                <p>\r\n                    Внезапно, тщательные исследования конкурентов освещают чрезвычайно интересные особенности картины в\r\n                    целом, однако конкретные выводы, разумеется, в равной степени предоставлены сами себе.\r\n                    Но действия представителей оппозиции, вне зависимости от их уровня, должны быть заблокированы в\r\n                    рамках своих собственных рациональных ограничений. Безусловно, сплочённость команды профессионалов\r\n                    в значительной степени обусловливает важность экономической целесообразности принимаемых решений.\r\n                </p>\r\n            </div>\r\n        </ScrollableAnchor>\r\n    );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport ScrollableAnchor from 'react-scrollable-anchor'; // якоря для движения по странице\r\n\r\nconst Works = () => {\r\n    return [\r\n        <ScrollableAnchor id={'section3'}>\r\n            <div className=\"Works\"><h1>Мои работы</h1>\r\n                <div className=\"WorksPlaceholder\">\r\n                    <a href=\"https://cat-in-a-box.github.io/mousewheel-checker/\" className=\"Card\">\r\n                        <img src={\"pics/mouse.png\"} alt=\"MouseIcon\"/>\r\n                        <img src={\"pics/mouse2.png\"} alt=\"MouseIcon2\"/>\r\n                        <div className=\"CardContainer\">\r\n                            <h3><b>Mousewheel Check</b></h3>\r\n                            <h4>Диагностика колеса мышки (часто ломается)</h4>\r\n                        </div>\r\n                    </a>\r\n                    <a href=\"https://cat-in-a-box.github.io/calculator\" className=\"Card\">\r\n                        <img src={\"pics/calculator.png\"} alt=\"CaloriesIcon\"/>\r\n                        <img src={\"pics/calculator2.png\"} alt=\"CaloriesIcon2\"/>\r\n                        <div className=\"CardContainer\">\r\n                            <h3><b>Calculator</b></h3>\r\n                            <h4>Нажимай кнопки</h4>\r\n                            <h4>Считай цифры</h4>\r\n                        </div>\r\n                    </a>\r\n                    <a href=\"https://cat-in-a-box.github.io/gallery-react/\" className=\"Card\">\r\n                        <img src={\"pics/paw.png\"} alt=\"PawIcon\" width=\"150px\"/>\r\n                        <img src={\"pics/paw2.png\"} alt=\"PawIcon2\" width=\"150px\"/>\r\n                        <div className=\"CardContainer\">\r\n                            <h3><b>Gallery</b></h3>\r\n                            <h4>Кто не любит котов?</h4>\r\n                            <h4>Все любят котов</h4>\r\n                        </div>\r\n                    </a>\r\n                    <a href=\"https://cat-in-a-box.github.io/snake-game/\" className=\"Card\">\r\n                        <img src={\"pics/snake.png\"} alt=\"ChickenIcon\" width=\"180px\"/>\r\n                        <img src={\"pics/snake2.png\"} alt=\"ChickenIcon2\" width=\"180px\"/>\r\n                        <div className=\"CardContainer\">\r\n                            <h3><b>Snake</b></h3>\r\n                            <h4>Двигай змею по полю</h4>\r\n                            <h4>Ешь квадратные колбаски</h4>\r\n                        </div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </ScrollableAnchor>\r\n    ];\r\n};\r\n\r\nexport default Works;","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"Footer\">\r\n            <p>Developed in 2019</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport ScrollableAnchor from 'react-scrollable-anchor';\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <ScrollableAnchor id={'section4'}>\r\n            <div className=\"Contact\">\r\n                <h1>Как со мной связаться?</h1>\r\n                <p>Просто напишите письмо на</p>\r\n                <h2>timoshuk.alexander(at)gmail.com</h2>\r\n            </div>\r\n        </ScrollableAnchor>\r\n    )\r\n};\r\n\r\nexport default Contact;","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\n// Установил и импортировал Helmet, с помощью которого изменил page title.\r\n// Насколько я понял, это самый простой способ менять его (как и атрибуты страницы) на реакте.\r\n// А еще подгружает скрипты если что вдруг. Нормально.\r\n// Потом убрал его, нашел другой способ изменять тайтл.\r\n// Поставил еще React-Scrollable-Anchor для плавного перемещения по якорям\r\n\r\nimport Header from './components/Header.jsx';\r\nimport Face from \"./components/Face.jsx\";\r\nimport About from \"./components/About.jsx\";\r\nimport Works from \"./components/Works.jsx\";\r\nimport Footer from \"./components/Footer.jsx\";\r\nimport Contact from \"./components/Contact.jsx\";\r\n//import ScrollButton from \"./components/ScrollButton.jsx\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Header/>\r\n            <Face/>\r\n            <About/>\r\n            <Works/>\r\n            <Contact/>\r\n            <Footer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}